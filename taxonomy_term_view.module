<?php
// Developed by Dennis Stevense, naquah.net

/**
 * Implementation of hook_menu().
 */
function taxonomy_term_view_menu() {
  $items = array();
  
  $items['admin/settings/taxonomy_term_view'] = array(
    'title' => 'Taxonomy term view',
    'description' => 'Settings for the taxonomy term view module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taxonomy_term_view_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'taxonomy_term_view.admin.inc',
  );
  
  return $items;
}

/**
 * Returns the view and display to use for a particular term.
 *
 * @param tid The identifier of the term.
 *
 * @return An array with keys view_name and display_id to indicate the view and display respectively.
 */
function taxonomy_term_view_view($tid) {
  $term = taxonomy_get_term($tid);
  
  // Try to find it for the term
  $result = db_query("SELECT * FROM {taxonomy_term_view} WHERE tid = %d", $term->tid);
  if ($record = db_fetch_array($result)) {
    $view_name = $record['view_name'];
    $display_id = $record['display_id'];
  }
  else {
    // Fallback to whatever default is set for the vocabulary
    $default = variable_get('taxonomy_term_view_vocabulary_' . $term->vid, '_none');
    if ($default == '_none') {
      $view_name = '_none';
      $display_id = NULL;
    }
    else {
      $pos = strpos($default, '__');
      $view_name = substr($default, 0, $pos);
      $display_id = substr($default, $pos + 2);
    }
  }
  
  return array(
    'view_name' => $view_name,
    'display_id' => $display_id,
  );
}

/**
 * Implementation of hook_menu_alter().
 */
function taxonomy_term_view_menu_alter(&$items) {
  $items['taxonomy/term/%']['page callback'] = 'taxonomy_term_view_page';
  $items['taxonomy/term/%']['module'] = 'taxonomy_term_view';
  $items['taxonomy/term/%']['file'] = 'taxonomy_term_view.pages.inc';
}

/**
 * Implementation of hook_form_alter().
 */
function taxonomy_term_view_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'taxonomy_form_vocabulary') {
    module_load_include('inc', 'taxonomy_term_view', 'taxonomy_term_view.admin');
    taxonomy_term_view_vocabulary_form_alter($form, $form_state);
  }
  else if ($form_id == 'taxonomy_form_term' && !isset($form_state['confirm_delete']) && !isset($form_state['confirm_parents'])) {
    module_load_include('inc', 'taxonomy_term_view', 'taxonomy_term_view.admin');
    taxonomy_term_view_term_form_alter($form, $form_state);
  }
  else if ($form_id == 'block_admin_configure') {
    module_load_include('inc', 'taxonomy_term_view', 'taxonomy_term_view.admin');
    taxonomy_term_view_block_form_alter($form, $form_state);
  }
}

/**
 * Implementation of hook_db_rewrite_sql().
 */
function taxonomy_term_view_db_rewrite_sql($query, $primary_table, $primary_field, $args) {
  // Are we loading the blocks for display?
  if ($primary_field == 'bid' && strpos($query, 'status = 1') !== FALSE) {
    $router_item = menu_get_item();
    
    // Are we on a taxonomy term page?
    if ($router_item['path'] == 'taxonomy/term/%') {
      $args = $router_item['page_arguments'];
      $str_tids = isset($args[0]) ? $args[0] : '';
      $terms = taxonomy_terms_parse_string($str_tids);
      $depth = isset($args[1]) ? $args[1] : 0;
      $op = isset($args[2]) ? $args[2] : 'page';

      // Are we on a taxonomy term page that we want to deal with?
      if (count($terms['tids']) == 1 && $depth == 0 && $op == 'page') {
        $tid = array_pop($terms['tids']);

        $active_view = taxonomy_term_view_view($tid);
        $view_name = $active_view['view_name'];
        $display_id = $active_view['display_id'];
        
        // Do we have a view set?
        if ($view_name != '_none') {
          // Join with our table to make sure only blocks are returned that are either enabled for the view and display, or that are not enabled or disabled for any particular view and display
          return array(
            'join' => "LEFT JOIN {taxonomy_term_view_block} ttvb ON $primary_table.module = ttvb.module AND $primary_table.delta = ttvb.delta",
            'where' => sprintf("(ttvb.view_name = '%s' AND ttvb.display_id = '%s') OR (ttvb.view_name IS NULL AND ttvb.display_id IS NULL)", db_escape_string($view_name), db_escape_string($display_id)),
          );
        }
      }
    }
  }
}

/**
 * Implementation of hook_taxonomy().
 */
function taxonomy_term_view_taxonomy($op, $type, $array = NULL) {
  switch ($type) {
    case 'vocabulary':
      switch ($op) {
        case 'delete':
          variable_del('taxonomy_term_view_vocabulary_' . $array['vid']);
          break;
      }
      break;
      
    case 'term':
      switch ($op) {
        case 'delete':
          db_query("DELETE FROM {taxonomy_term_view} WHERE tid = %d", $array['tid']);
          break;
      }
      break;
  }
}
